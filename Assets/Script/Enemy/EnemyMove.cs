using System.Collections;
using System.Collections.Generic;
using UnityEditor;
using UnityEngine;

public class EnemyMove : MonoBehaviour
{
    Rigidbody2D rigid;
    private Transform target;
    private Vector3 offset = new Vector3(0, 1, 0);
    //?? ???, ???? ????, ???? ????
    public float enemy_speed = 3;
    public float enemy_recognition_range = 10;
    public float enemy_attack_range = 1;

    //public float enemy_attack_range=1;
    //???? ???? ?¡À???? ??????? ???? ???? ???->??????? ????????? ????
    public bool enemy_attack_range_enabled = false;
    //??? ????? ???????? ??? ??? ???? ????
    public bool moveable = true;
    bool move = false;
    //???? ???? ??? ??????? ?¢¯????? ??? ???? ??
    float origin_x;
    Animator animator;

    void Start()
    {

        rigid = GetComponent<Rigidbody2D>();
        // ??????? ???
        target = GameObject.FindGameObjectWithTag("Player").GetComponent<Transform>();
        animator = GetComponent<Animator>();
        origin_x = transform.localScale.x;
    }

    void Update()
    {
        float distance = Vector2.Distance(transform.position, target.position + offset);
        if(moveable && enemy_recognition_range > distance && (enemy_attack_range-1) < distance)
        {
            //???????
            animator.SetBool("Run", true);
            //?? ????????? ???? ?? bool?? 'Run'?? ????? ????? ??? ???????
            move = true;
            //transform.position = Vector2.MoveTowards(transform.position, target.position + offset, enemy_speed*Time.deltaTime);

            //???? ????? ???? ??????? ???????? ???? ????????? scale?? x?? ????? ???? ?????
            if(target.position.x > transform.position.x && moveable)//?¡À???? ???? ??????? ???? ??
            {
                transform.localScale = new Vector3(origin_x, transform.localScale.y, transform.localScale.z);//????
            }
            else if(target.position.x < transform.position.x && moveable)//?¡À???? ???? ????? ???? ??
            {
                transform.localScale = new Vector3(origin_x * -1, transform.localScale.y, transform.localScale.z);//?¢¯????
            }
        }
        else
        {
            //????????
            animator.SetBool("Run", false);
            move = false;
        }
    }

    void FixedUpdate()
    {
        if(move)
            rigid.MovePosition(Vector2.MoveTowards(transform.position, target.position + offset, enemy_speed*Time.deltaTime));
    }
}
